trigger:
- master
- main
- release

pool:
  vmImage: 'windows-latest'

variables:
  #[REQUIRED] AzureSubscription ***
  #For connecting your azureSubscription to the pipeline:
  #1.- Go to your project settings (Bottom Left option)
  #2.- Scroll down to 'Service Connections'
  #3.- Click on 'Create new service connection' button
  #4.- Click on 'Azure Resource Manager' and ckick on Next
  #5.- Select ''Service Principal (automatic) and click on Next
  #6.- Select the subscription you want to use and set a Name for your new service connection
  #7.- Finally, use the name you defined in previous step as value for this variable
- name: azureAccount
  value: '' 

- name: jobTimeout
  value: '40'

stages:
  - stage: Build_UNO
    pool:
      vmImage: 'windows-latest'

    jobs:
    - job: Wasm
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /azure/steps/install-dependencies.yml  
          parameters:
            azure_subscription: '${{ variables.azureAccount }}'
            install_mobileWorkloads: 'true'

        - template: /azure/steps/build-wasm.yml
          parameters:
            azure_subscription: '${{ variables.azureAccount }}'
            package_id: 'Wasm'
            project_to_build: 'MyExtensionsApp.Wasm/MyExtensionsApp.Wasm.csproj'
            
    - job: Android
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /azure/steps/install-dependencies.yml  
          parameters:
            azure_subscription: '${{ variables.azureAccount }}'
            install_mobileWorkloads: 'true'

        - template: /azure/steps/build-android.yml
          parameters:
            azure_subscription: '${{ variables.azureAccount }}'
            package_id: 'Android'
            project_to_build: 'MyExtensionsApp.Mobile/MyExtensionsApp.Mobile.csproj'
            target_framework: 'net6.0-android'

    - job: iOS
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /azure/steps/install-dependencies.yml  
          parameters:
            azure_subscription: '${{ variables.azureAccount }}'
            install_mobileWorkloads: 'true'

        - template: /azure/steps/build-mobile.yml
          parameters:
            azure_subscription: '${{ variables.azureAccount }}'
            package_id: 'Mobile_iOS'
            project_to_build: 'MyExtensionsApp.Mobile/MyExtensionsApp.Mobile.csproj'
            target_framework: 'net6.0-ios'

    - job: MacCatalyst
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /azure/steps/install-dependencies.yml  
          parameters:
            azure_subscription: '${{ variables.azureAccount }}'
            install_mobileWorkloads: 'true'

        - template: /azure/steps/build-mobile.yml
          parameters:
            azure_subscription: '${{ variables.azureAccount }}'
            package_id: 'Mobile_MacCatalyst'
            project_to_build: 'MyExtensionsApp.Mobile/MyExtensionsApp.Mobile.csproj'
            target_framework: 'net6.0-maccatalyst'

    - job: Windows
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /azure/steps/install-dependencies.yml  
          parameters:
            azure_subscription: '${{ variables.azureAccount }}'
            install_windowsSDK: 'true'
            install_mobileWorkloads: 'true'
            install_vsBuildTools: 'true'

        - template: /azure/steps/build-windows.yml
          parameters:
            azure_subscription: '${{ variables.azureAccount }}' 
            package_id: 'Windows'
            project_folder: 'MyExtensionsApp.Windows'
            project_to_build: 'MyExtensionsApp.Windows/MyExtensionsApp.Windows.csproj'

    - job: WPF
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /azure/steps/install-dependencies.yml  
          parameters:
            azure_subscription: '${{ variables.azureAccount }}'
            install_windowsSDK: 'true'
            install_mobileWorkloads: 'true'

        - template: /azure/steps/build-desktop.yml
          parameters:
            azure_subscription: '${{ variables.azureAccount }}'
            package_id: 'WPF'
            project_to_build: 'MyExtensionsApp.Skia.WPF/MyExtensionsApp.Skia.WPF.csproj'
            
    - job: GTK
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /azure/steps/install-dependencies.yml  
          parameters:
            azure_subscription: '${{ variables.azureAccount }}'
            install_windowsSDK: 'true'
            install_gtk: 'true'
            install_mobileWorkloads: 'true'

        - template: /azure/steps/build-desktop.yml
          parameters:
            azure_subscription: '${{ variables.azureAccount }}'
            package_id: 'GTK'
            project_to_build: 'MyExtensionsApp.Skia.Gtk/MyExtensionsApp.Skia.Gtk.csproj'
            
    - job: Linux
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /azure/steps/install-dependencies.yml
          parameters:
            azure_subscription: '${{ variables.azureAccount }}'
            install_windowsSDK: 'true'
            install_mobileWorkloads: 'true'

        - template: /azure/steps/build-desktop.yml
          parameters:
            azure_subscription: '${{ variables.azureAccount }}'
            package_id: 'Linux'
            project_to_build: 'MyExtensionsApp.Skia.Linux.FrameBuffer/MyExtensionsApp.Skia.Linux.FrameBuffer.csproj'

    # - job: iOS_Signed
    #   timeoutInMinutes: '${{ variables.jobTimeout }}'
    #   steps:
    #     - template: /azure/steps/install-dependencies.yml  
    #       parameters:
    #         azure_subscription: '${{ variables.azureAccount }}'
    #         install_mobileWorkloads: 'true'
    #         install_windowsSDK: 'false'

    #     - template: /azure/steps/build-ios.yml
    #       parameters:
    #         azure_subscription: '${{ variables.azureAccount }}'
    #         package_id: 'signed_ios'
    #         project_folder: 'MyExtensionsApp.Mobile'
    #         project_to_build: 'MyExtensionsApp.Mobile/MyExtensionsApp.Mobile.csproj'
    #         certificate: 'cert.p12'
    #         certificate_password: 'contoso'
    #         provisioning_profile: 'contoso.mobileprovision'
    #         codesign_provision: 'MyExtensionsApp'
    #         codesign_key: 'Apple Development: Contoso Contoso (572224A42L)'
    #   pool:
    #     vmImage: macOS-latest

    # - job: Android_Signed
    #   timeoutInMinutes: '${{ variables.jobTimeout }}'
    #   steps:
    #     - template: /azure/steps/install-dependencies.yml  
    #       parameters:
    #         azure_subscription: '${{ variables.azureAccount }}'
    #         install_mobileWorkloads: 'true'

    #     - template: /azure/steps/build-android.yml
    #       parameters:
    #         sign_package: 'true'
    #         certificate:  'cert.jks'
    #         certificate_password: 'contoso'
    #         certificate_alias: 'contoso'
    #         azure_subscription: '${{ variables.azureAccount }}'
    #         package_id: 'signed_android'
    #         project_to_build: 'MyExtensionsApp.Mobile/MyExtensionsApp.Mobile.csproj'

    # - job: Windows_Signed
    #   timeoutInMinutes: '${{ variables.jobTimeout }}'
    #   steps:
    #     - template: /azure/steps/install-dependencies.yml  
    #       parameters:
    #         azure_subscription: '${{ variables.azureAccount }}'
    #         install_windowsSDK: 'true'
    #         install_mobileWorkloads: 'true'
    #         install_vsBuildTools: 'true'
    #     - template: /azure/steps/build-windows.yml
    #       parameters:
    #         sign_package: 'true'
    #         certificate: 'cert.pfx' 
    #         azure_subscription: '${{ variables.azureAccount }}'
    #         package_id: 'signed_windows'
    #         project_folder: 'MyExtensionsApp.Windows'
    #         project_to_build: 'MyExtensionsApp.Windows/MyExtensionsApp.Windows.csproj'