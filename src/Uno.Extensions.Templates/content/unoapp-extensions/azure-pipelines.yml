    ###################################################
    #                    IMPORTANT                    #
    # Please make sure  GitTools is installed in your #
    # project. Otherwise all jobs will fail           #
    # See how to install new extensions here:         #
    # https://learn.microsoft.com/en-us/azure/devops  #
    #/marketplace/install-extension                   #
    ###################################################
trigger:
- master
- release

# trigger this pipeline if there's a PR to any of these branches
pr:
- master
- release/**

variables:
- name: jobTimeout
  value: '60'

stages:
  - stage: Build_UNO

    jobs:
#if (wasm)    
    - job: Wasm
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /azure/steps/install-dependencies.yml  
          parameters:
            target_platform: 'wasm'

        - template: /azure/steps/wasm.yml
          parameters:
            package_id: 'Wasm'
            project_to_build: 'MyExtensionsApp.Wasm/MyExtensionsApp.Wasm.csproj'
      pool:
        vmImage: macOS-latest   
#endif

#if (android) 
    - job: Android
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /azure/steps/install-dependencies.yml  
          parameters:
            target_platform: 'android'

        - template: /azure/steps/android.yml
          parameters:
            package_id: 'Android'
            target_framework: "net$ciTargetDotNetVersion$-android"
            project_to_build: 'MyExtensionsApp.Mobile/MyExtensionsApp.Mobile.csproj'
      pool:
        vmImage: macOS-latest

    ###################################################
    #                    IMPORTANT                    #
    # Store certificates and mobile provision files   #
    # in secure files, then just replace the jks      #
    # variable down below                             #
    # with the appropiate filename                    #
    ###################################################

    - job: Android_Signed   
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /azure/steps/install-dependencies.yml  
          parameters:
            target_platform: 'android'
        - template: /azure/steps/android.yml
          parameters:
            sign_package: 'true'
            target_framework: "net$ciTargetDotNetVersion$-android"
            certificate:  '' #YOUR_CERT.jks stored in secureFiles
            certificate_password: 'contoso'
            certificate_alias: 'contoso'
            package_id: 'signed_android'
            project_to_build: 'MyExtensionsApp.Mobile/MyExtensionsApp.Mobile.csproj'
      pool:
        vmImage: macOS-latest         
#endif

#if (ios) 
    - job: iOS
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /azure/steps/install-dependencies.yml  
          parameters:
            target_platform: 'ios'

        - template: /azure/steps/mobile.yml
          parameters:
            project_to_build: 'MyExtensionsApp.Mobile/MyExtensionsApp.Mobile.csproj'
            target_framework: 'net$ciTargetDotNetVersion$-ios'
      pool:
        vmImage: windows-latest

    ###################################################
    #                    IMPORTANT                    #
    # Store certificates and mobile provision files   #
    # in secure files, then just replace the          #
    # p12 and mobileprovision variables down below    #
    # with the appropiate filenames                   #
    ###################################################

    - job: iOS_Signed
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /azure/steps/install-dependencies.yml  
          parameters:
            target_platform: 'ios'
        - template: /azure/steps/ios.yml
          parameters:
            package_id: 'signed_ios'
            target_framework: "net$ciTargetDotNetVersion$-ios"
            project_to_build: 'MyExtensionsApp.Mobile/MyExtensionsApp.Mobile.csproj'
            certificate: '' #YOUR_CERT.p12 stored in secureFiles
            certificate_password: 'contoso'
            provisioning_profile: ''  #YOUR_PROV_PROFILE.mobileprovision stored in secureFiles
            codesign_provision: 'MyExtensionsApp'
            codesign_key: 'Apple Development: Contoso Contoso (572224A42L)'
      pool:
        vmImage: macOS-latest        
#endif

#if (maccatalyst) 
    - job: MacCatalyst
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /azure/steps/install-dependencies.yml  
          parameters:
            target_platform: 'macos'

        - template: /azure/steps/mobile.yml
          parameters:
            project_to_build: 'MyExtensionsApp.Mobile/MyExtensionsApp.Mobile.csproj'
            target_framework: 'net$ciTargetDotNetVersion$-maccatalyst'
      pool:
        vmImage: macos-latest
#endif

#if (winAppSdk) 
    - job: Windows
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /azure/steps/install-dependencies.yml  
          parameters:
            target_platform: 'uwp'

        - template: /azure/steps/windows.yml
          parameters:
            package_id: 'Windows'
            project_to_build: 'MyExtensionsApp.Windows/MyExtensionsApp.Windows.csproj'
      pool:
        vmImage: windows-latest

    ###################################################
    #                    IMPORTANT                    #
    # Store certificates and mobile provision files   #
    # in secure files, then just replace the pfx      #
    # variable  down below                            #
    # with the appropiate filename                    #
    ###################################################
    - job: Windows_Signed
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /azure/steps/install-dependencies.yml  
          parameters:
            target_platform: 'uwp'
        - template: /azure/steps/windows.yml
          parameters:
            sign_package: 'true'
            certificate: '' #YOUR_CERT.pfx stored in secureFiles
            package_id: 'signed_windows'
            project_to_build: 'MyExtensionsApp.Windows/MyExtensionsApp.Windows.csproj'
      pool:
        vmImage: windows-latest        
#endif

#if (skiaWpf)
    - job: WPF
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /azure/steps/install-dependencies.yml  
          parameters:
            target_platform: 'skiawpf'

        - template: /azure/steps/desktop.yml
          parameters:
            package_id: 'WPF'
            project_to_build: 'MyExtensionsApp.Skia.WPF/MyExtensionsApp.Skia.WPF.csproj'
      pool:
        vmImage: windows-latest
#endif

#if (skiaGtk)
    - job: GTK
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /azure/steps/install-dependencies.yml  
          parameters:
            target_platform: 'skiagtk_macos'

        - template: /azure/steps/desktop.yml
          parameters:
            package_id: 'GTK'
            project_to_build: 'MyExtensionsApp.Skia.Gtk/MyExtensionsApp.Skia.Gtk.csproj'
      pool:
        vmImage: macos-latest        
#endif

#if (skiaLinuxFb)
    - job: Linux
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /azure/steps/install-dependencies.yml
          parameters:
            target_platform: 'linux'

        - template: /azure/steps/desktop.yml
          parameters:
            package_id: 'Linux'
            project_to_build: 'MyExtensionsApp.Skia.Linux.FrameBuffer/MyExtensionsApp.Skia.Linux.FrameBuffer.csproj'
      pool:
        vmImage: macos-latest            
#endif        