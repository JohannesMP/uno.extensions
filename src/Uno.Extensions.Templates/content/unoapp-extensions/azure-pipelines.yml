    ###################################################
    #                    IMPORTANT                    #
    # Please make sure  GitTools is installed in your #
    # project. Otherwise all jobs will fail           #
    # See how to install new extensions here:         #
    # https://learn.microsoft.com/en-us/azure/devops  #
    #/marketplace/install-extension                   #
    ###################################################
trigger:
- master
- release

# trigger this pipeline if there's a PR to any of these branches
pr:
- master
- release/**

#if (useAndroid || useIOS || useWinAppSdk)
#REQUIRED PARAMETERS FOR SIGNING
parameters:
#endif
#if (useWinAppSdk)
- name: pfx_certificate
  type: string
  default: 'CERTIFICATE.pfx'      #.pfx certificate stored in secureFiles
#endif 
#if (useAndroid)
- name: jks_certificate
  type: string
  default: 'CERTIFICATE.jks'      #.jks certificate stored in secureFiles
- name: jks_certificate_password
  type: string
  default: 'contoso'              #your secure certificate password  
- name: certificate_alias
  type: string
  default: 'contoso'              #.jks certificate alias used when creating the certificate
#endif
#if (useIOS)
- name: p12_certificate
  type: string
  default: 'CERTIFICATE.p12'      #.p12 certificate stored in secureFiles
- name: p12_certificate_password
  type: string
  default: 'contoso'              #your secure certificate password  
- name: provisioning_profile
  type: string
  default: 'MyExtensionsApp.mobileprovision'  #.mobileprovision file stored in secureFiles
- name: codesign_provision
  type: string
  default: 'MyExtensionsApp'      #The provisioning profile name. This is the name you entered in the Apple Developer portal when creating your provisioning profile.  
- name: codesign_key
  type: string
  default: 'Apple Development: Contoso Contoso (752234A22L)'    #The name of the distribution/development certificate
#endif

variables:
- name: jobTimeout
  value: '60'

stages:
  - stage: Build_UNO
    jobs:
#if (useWasm)    
    - job: Wasm
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /build/steps/install-dependencies.yml  
          parameters:
            target_platform: 'wasm'

        - template: /build/steps/wasm.yml
          parameters:
            package_id: 'Wasm'
            project_to_build: 'MyExtensionsApp.Wasm/MyExtensionsApp.Wasm.csproj'
      pool:
        vmImage: macOS-latest   
#endif

#if (useAndroid) 
    - job: Android
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /build/steps/install-dependencies.yml  
          parameters:
            target_platform: 'android'

        - template: /build/steps/android.yml
          parameters:
            package_id: 'Android'
            target_framework: "net$ciTargetDotNetVersion$-android"
            project_to_build: 'MyExtensionsApp.Mobile/MyExtensionsApp.Mobile.csproj'
      pool:
        vmImage: macOS-latest

    - job: Android_Signed_PreValidation
      dependsOn: Android
      condition: succeeded()
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - task: PowerShell@2
          inputs:
            targetType: 'filePath'
            filePath: 'build/scripts/validate_android_signing_job.ps1'
            arguments: >
                -certificate "${{ parameters.jks_certificate }}"
                -certificate_password "${{ parameters.certificate_password }}"
                -certificate_alias "${{ parameters.certificate_alias }}"
      pool:
        vmImage: macOS-latest

    ###################################################
    #                    IMPORTANT                    #
    # Store certificates and mobile provision files   #
    # in secure files, then just replace the jks      #
    # variable down below                             #
    # with the appropiate filename                    #
    ###################################################
    
    - job: Android_Signed
      dependsOn: Android_Signed_PreValidation
      condition: succeeded()
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /build/steps/install-dependencies.yml  
          parameters:
            target_platform: 'android'
        - template: /build/steps/android.yml
          parameters:
            sign_package: 'true'
            target_framework: "net$ciTargetDotNetVersion$-android"
            certificate:  '${{ parameters.jks_certificate }}'
            certificate_password: '${{ parameters.jks_certificate_password }}'
            certificate_alias: '${{ parameters.certificate_alias }}'
            package_id: 'signed_android'
            project_to_build: 'MyExtensionsApp.Mobile/MyExtensionsApp.Mobile.csproj'
      pool:
        vmImage: macOS-latest         
#endif

#if (useIOS) 
    - job: iOS
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /build/steps/install-dependencies.yml  
          parameters:
            target_platform: 'ios'

        - template: /build/steps/mobile.yml
          parameters:
            project_to_build: 'MyExtensionsApp.Mobile/MyExtensionsApp.Mobile.csproj'
            target_framework: 'net$ciTargetDotNetVersion$-ios'
      pool:
        vmImage: windows-latest

    - job: iOS_Signed_PreValidation
      dependsOn: iOS
      condition: succeeded()
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - task: PowerShell@2
          inputs:
            targetType: 'filePath'
            filePath: 'build/scripts/validate_ios_signing_job.ps1'
            arguments: >
                -certificate "${{ parameters.p12_certificate }}"
                -certificate_password "${{ parameters.certificate_password }}"
                -codesign_key "${{ parameters.codesign_key }}"
                -codesign_provision "${{ parameters.codesign_provision }}"
                -provisioning_profile "${{ parameters.provisioning_profile }}"
      pool:
        vmImage: macOS-latest

    ###################################################
    #                    IMPORTANT                    #
    # Store certificates and mobile provision files   #
    # in secure files, then just replace the          #
    # p12 and mobileprovision variables down below    #
    # with the appropiate filenames                   #
    ###################################################

    - job: iOS_Signed
      dependsOn: iOS_Signed_PreValidation
      condition: succeeded()
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /build/steps/install-dependencies.yml  
          parameters:
            target_platform: 'ios'
        - template: /build/steps/ios.yml
          parameters:
            package_id: 'signed_ios'
            target_framework: "net$ciTargetDotNetVersion$-ios"
            project_to_build: 'MyExtensionsApp.Mobile/MyExtensionsApp.Mobile.csproj'
            certificate: '${{ parameters.p12_certificate }}'
            certificate_password: '${{ parameters.p12_certificate_password }}'
            provisioning_profile: '${{ parameters.provisioning_profile }}'
            codesign_provision: '${{ parameters.codesign_provision }}'
            codesign_key: '${{ parameters.codesign_key }}'
      pool:
        vmImage: macOS-latest        
#endif

#if (useMacCatalyst) 
    - job: MacCatalyst
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /build/steps/install-dependencies.yml  
          parameters:
            target_platform: 'macos'

        - template: /build/steps/mobile.yml
          parameters:
            project_to_build: 'MyExtensionsApp.Mobile/MyExtensionsApp.Mobile.csproj'
            target_framework: 'net$ciTargetDotNetVersion$-maccatalyst'
      pool:
        vmImage: macos-latest
#endif

#if (useWinAppSdk) 
    - job: Windows
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /build/steps/install-dependencies.yml  
          parameters:
            target_platform: 'uwp'

        - template: /build/steps/windows.yml
          parameters:
            package_id: 'Windows'
            project_to_build: 'MyExtensionsApp.Windows/MyExtensionsApp.Windows.csproj'
      pool:
        vmImage: windows-latest

    - job: Windows_Signed_PreValidation
      dependsOn: Windows
      condition: succeeded()
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - task: PowerShell@2
          inputs:
            targetType: 'filePath'
            filePath: 'build/scripts/validate_windows_signing_job.ps1'
            arguments: >
                -certificate "${{ parameters.pfx_certificate }}"
      pool:
        vmImage: macOS-latest

    ###################################################
    #                    IMPORTANT                    #
    # Store certificates and mobile provision files   #
    # in secure files, then just replace the pfx      #
    # variable  down below                            #
    # with the appropiate filename                    #
    ###################################################
    - job: Windows_Signed
      dependsOn: Windows_Signed_PreValidation
      condition: succeeded()
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /build/steps/install-dependencies.yml  
          parameters:
            target_platform: 'uwp'
        - template: /build/steps/windows.yml
          parameters:
            sign_package: 'true'
            certificate: '${{ parameters.pfx_certificate }}'
            package_id: 'signed_windows'
            project_to_build: 'MyExtensionsApp.Windows/MyExtensionsApp.Windows.csproj'
      pool:
        vmImage: windows-latest        
#endif

#if (useWpf)
    - job: WPF
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /build/steps/install-dependencies.yml  
          parameters:
            target_platform: 'skiawpf'

        - template: /build/steps/desktop.yml
          parameters:
            package_id: 'WPF'
            project_to_build: 'MyExtensionsApp.Skia.WPF/MyExtensionsApp.Skia.WPF.csproj'
      pool:
        vmImage: windows-latest
#endif

#if (useLinuxFb)
    - job: Linux
      timeoutInMinutes: '${{ variables.jobTimeout }}'
      steps:
        - template: /build/steps/install-dependencies.yml
          parameters:
            target_platform: 'linux'

        - template: /build/steps/desktop.yml
          parameters:
            package_id: 'Linux'
            project_to_build: 'MyExtensionsApp.Skia.Linux.FrameBuffer/MyExtensionsApp.Skia.Linux.FrameBuffer.csproj'
      pool:
        vmImage: macos-latest            
#endif