<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>netstandard2.0</TargetFramework>
		<IsTool>true</IsTool>
		<IncludeBuildOutput>false</IncludeBuildOutput>
		<PackageType>Template</PackageType>
		<ContentTargetFolders>content</ContentTargetFolders>
		<EnableDefaultItems>False</EnableDefaultItems>

		<!-- required for .vsconfig -->
		<NoDefaultExcludes>true</NoDefaultExcludes>

		<!-- Disable package generation for WinUI converted build -->
		<IsPackable Condition="'$(UNO_UWP_BUILD)'=='false'">false</IsPackable>
	</PropertyGroup>

	<PropertyGroup>
		<Description>Quickstart template for using Uno Extensions.</Description>
		<GeneratePackageOnBuild Condition="'$(IsPackable)'!='false'">true</GeneratePackageOnBuild>
		<PackageTags>dotnet-new;templates;uno-platform;webassembly;ios;android;winui;macos;uno-extensions</PackageTags>
		<NoWarn>$(NoWarn);NU5128</NoWarn>
	</PropertyGroup>

	<ItemGroup>
		<TemplateFile Include="content/**/*"
					Exclude="**/obj/**;**/bin/**;**/*.Debugging.sln" />
		<UpToDateCheckInput Include="@(TemplateFile)" />
	</ItemGroup>

	<Target Name="PrepareTemplateFiles" BeforeTargets="ReplaceVersions;BeforeBuild">
		<Copy
			SourceFiles="@(TemplateFile)"
			DestinationFiles="$(IntermediateOutputPath)/content/%(RecursiveDir)%(Filename)%(Extension)"
			SkipUnchangedFiles="false" />
		<Copy
			SourceFiles="content/unoapp-extensions/MyExtensionsApp.DataContracts/WeatherForecast.cs"
			DestinationFiles="$(IntermediateOutputPath)/content/unoapp-extensions/MyExtensionsApp.Server/WeatherForecast.cs"
			SkipUnchangedFiles="false" />
		<Copy
			SourceFiles="content/unoapp-extensions/MyExtensionsApp.Windows/app.manifest"
			DestinationFiles="$(IntermediateOutputPath)/content/unoapp-extensions/MyExtensionsApp.Skia.Gtk/app.manifest"
			SkipUnchangedFiles="false" />
		<Copy
			SourceFiles="content/unoapp-extensions/MyExtensionsApp.Windows/app.manifest"
			DestinationFiles="$(IntermediateOutputPath)/content/unoapp-extensions/MyExtensionsApp.Skia.Linux.FrameBuffer/app.manifest"
			SkipUnchangedFiles="false" />
		<ItemGroup>
			<_PackageFiles Include="$(IntermediateOutputPath)/content/**/*"
							 PackagePath="content" />
		</ItemGroup>
	</Target>

	<Target Name="ReplaceVersions" BeforeTargets="BeforeBuild" AfterTargets="PrepareTemplateFiles">
		<ItemGroup>
			<_AllCSProjFiles Include="$(IntermediateOutputPath)/content/**/*.csproj" />
			<_AllCSProjFiles Include="$(IntermediateOutputPath)/content/**/Directory.Packages.props" />
		</ItemGroup>
		<ReplaceFileText Filename="%(_AllCSProjFiles.Identity)"
					MatchExpression="Version=&quot;255.255.255.255&quot;"
					ReplacementText="Version=&quot;$(PackageVersion)&quot;" />
	</Target>

	<!-- Using Regex Replace prevents XmlPoke from replacing Tabs with Spaces -->
	<UsingTask TaskName="ReplaceFileText"
			TaskFactory="RoslynCodeTaskFactory"
			AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
			<Filename ParameterType="System.String" Required="true" />
			<MatchExpression ParameterType="System.String" Required="true" />
			<ReplacementText ParameterType="System.String" Required="true" />
		</ParameterGroup>
		<Task>
			<Using Namespace="System" />
			<Using Namespace="System.IO" />
			<Using Namespace="System.Text.RegularExpressions" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
					File.WriteAllText(
						Filename,
						Regex.Replace(File.ReadAllText(Filename), MatchExpression, ReplacementText)
						);
				]]>
			</Code>
		</Task>
	</UsingTask>
</Project>
